# This workflow will build the Java project with Gradle and cache/restore any dependencies to improve the workflow execution time

name: Build

on:
  push:
  #pull_request:

jobs:

  build:

    runs-on: ubuntu-latest

    # Docker Hub image that `postgres-job` executes in
    container: node:latest

    services:
      postgres:
        image: postgres

        env:
          POSTGRES_DB: project
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


    steps:
      - uses: actions/checkout@v3

      - name: Install PostgreSQL client
        run: |
             apt-get update
             apt-get install --yes postgresql-client

      # queries database with postgres client
      - name: Query database
        run: psql -h postgres -d project -U postgres -c 'SELECT 1;'
        env:
          # postgress password is required; alternatively, you can run:
          # `PGPASSWORD=postgres_password psql ...`
          PGPASSWORD: postgres

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Build with Gradle
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: build
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
          PGPASSWORD: postgres
